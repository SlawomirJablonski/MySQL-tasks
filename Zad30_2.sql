DROP PROCEDURE IF EXISTS UpdateBestsellers;
DELIMITER $$
CREATE PROCEDURE UpdateBestsellers()
BEGIN
	DECLARE BOOKRENTS, DAYS, BK_ID INT;
    DECLARE RENTSPERMONTH DECIMAL(5,2);
    DECLARE FINISHED INT DEFAULT 0;
    DECLARE ALL_BOOKS CURSOR FOR SELECT BOOK_ID FROM BOOKS;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET FINISHED = 1;
    OPEN ALL_BOOKS;
    WHILE (FINISHED = 0) DO
		FETCH ALL_BOOKS INTO BK_ID;
        IF (FINISHED = 0) THEN
			SELECT COUNT(*) FROM RENTS
            WHERE BOOK_ID = BK_ID
            INTO BOOKRENTS;
            SELECT DATEDIFF(MAX(RENT_DATE), MIN(RENT_DATE)) + 1 FROM RENTS
            WHERE BOOK_ID = BK_ID
            INTO DAYS;
            SET RENTSPERMONTH = BOOKRENTS / DAYS * 30;
				IF RENTSPERMONTH > 2 THEN
						UPDATE BOOKS SET BESTSELLER = TRUE
						WHERE BOOK_ID = BK_ID;
						COMMIT;
                    ELSE
						UPDATE BOOKS SET BESTSELLER = FALSE
						WHERE BOOK_ID = BK_ID;
						COMMIT;
                END IF;            
		END IF;
	END WHILE;
    CLOSE ALL_BOOKS;
END $$

DROP PROCEDURE IF EXISTS MarkBestsellers;
CREATE PROCEDURE MarkBestsellers()
BEGIN
	ALTER TABLE BOOKS ADD BESTSELLER BOOLEAN;
    CALL UpdateBestsellers();
    COMMIT;
    
END $$
DELIMITER ;
CALL MarkBestsellers();
SELECT * FROM BOOKS;